name: Python package

on: [push]

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
    - name: Create SSH key
      env:
        SSH_PRIVATE_KEY: ${{secrets.SSH_PRIVATE_KEY}}
        SSH_KNOWN_HOSTS: ${{secrets.SSH_KNOWN_HOSTS}}
        SSH_KEY_PATH   : ${{ github.workspace }}/../private.key
      run: |
        mkdir -p ~/.ssh/
        echo "$SSH_PRIVATE_KEY" > $SSH_KEY_PATH
        sudo chmod 600 $SSH_KEY_PATH
        echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
    - name: Install fabric
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install fabric3
    - name: Deploy to prod
      working-directory: ./deploy_tools
      env:
        SSH_KEY_PATH   : ${{ github.workspace }}/../private.key
        REPO_URL       : $GITHUB_SERVER_URL/$GITHUB_REPOSITORY.git
        BRANCH         : main
        SERVER_USERNAME: ${{secrets.SERVER_USERNAME}}
        SERVER_DOMAIN  : ${{secrets.SERVER_DOMAIN}}
      run: fab -i $SSH_KEY_PATH deploy:$REPO_URL,$BRANCH,$SERVER_USERNAME,host=$SERVER_USERNAME@$SERVER_DOMAIN




#     - name: Set up Python ${{ matrix.python-version }}
#       uses: actions/setup-python@v2
#       with:
#         python-version: ${{ matrix.python-version }}
#     - name: Install internal requirements
#       run: |
#         python -m pip install --upgrade pip setuptools wheel
#         pip install -r requirements.txt
#     - name: Run internal tests
#       working-directory: ./src
#       run: python manage.py test
#     - name: Install functional tests dependencies
#       run: pip install -r requirements-functional-tests.txt
#     - name: Copy functional tests .env.prod file. Dont' worry, the values are used only for functional tests
#       run: |
#         ls functional_tests
#         cp functional_tests/dotenv_func_test ./.env.prod
#         cp functional_tests/dotenv_db_func_test ./.env.db.prod
#     - name: Start the containers
#       run: |
#         docker-compose up -d --build
#         docker-compose logs > docker-compose-logs.txt
#     - name: Upload docker compose logs as artifacts
#       uses: actions/upload-artifact@v2
#       with:
#         name: docker-compose-logs.txt
#         path: docker-compose-logs.txt
#     - name: Migrate
#       run: docker-compose exec -T web python manage.py migrate --noinput
#     - name: Run functional tests
#       run: python -m pytest --docker-compose-no-build --use-running-containers functional_tests
#     - name: Stop the containers
#       run: docker-compose down

      
      
