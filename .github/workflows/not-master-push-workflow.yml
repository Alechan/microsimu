name: Secondary branch

on:
  push:
    branches-ignore:
      - main

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: [3.9]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install internal requirements
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt
      - name: Run internal tests
        working-directory: ./src
        run: python manage.py test
      - name: Install functional tests dependencies
        run: pip install -r requirements-functional-tests.txt
      - name: Copy functional tests .env.prod file. Dont' worry, the values are used only for functional tests
        run: |
          cp functional_tests/dotenv_func_test ./.env.prod
          cp functional_tests/dotenv_db_func_test ./.env.db.prod
      - name: Start the containers
        run: |
          docker-compose up -d --build
          docker-compose logs > docker-compose-logs.txt
      - name: Upload docker compose logs as artifacts
        uses: actions/upload-artifact@v2
        with:
          name: docker-compose-logs.txt
          path: docker-compose-logs.txt
      - name: Migrate
        run: docker-compose exec -T web python manage.py migrate --noinput
      - name: Create test user
        run: docker-compose exec -T web python manage.py createuser --username funct_test_user --password plsdonthack
      - name: Run functional tests
        run: python -m pytest --docker-compose-no-build --use-running-containers functional_tests
      - name: Stop the containers
        run: docker-compose down



